// vite.config.js
import { fileURLToPath, URL } from "url";
import { defineConfig } from "file:///home/lee/vueflix/node_modules/vite/dist/node/index.js";
import VueDevTools from "file:///home/lee/vueflix/node_modules/vite-plugin-vue-devtools/dist/vite.mjs";
import { VitePWA } from "file:///home/lee/vueflix/node_modules/vite-plugin-pwa/dist/index.js";
import vue from "file:///home/lee/vueflix/node_modules/@vitejs/plugin-vue/dist/index.mjs";
var __vite_injected_original_import_meta_url = "file:///home/lee/vueflix/vite.config.js";
var vite_config_default = defineConfig({
  plugins: [
    vue({
      template: {
        compilerOptions: {
          isCustomElement: (tag) => tag.includes("swiper")
        }
      }
    }),
    VueDevTools(),
    VitePWA({
      includeAssets: ["favicon.svg", "robots.txt"],
      registerType: "autoUpdate",
      devOptions: {
        enabled: true
      },
      manifest: {
        name: "\uB370\uB808",
        short_name: "\uB370\uB808",
        description: "\uB2F9\uB2F9\uD558\uAC8C \uC560\uB2C8 \uBCFC \uB550, \uB370\uB808! \uACE0\uC804 \uBA85\uC791\uBD80\uD130 \uC774\uBC88 \uBD84\uAE30 \uD654\uC81C\uC791\uAE4C\uC9C0 \uBAA8\uB4E0 \uC560\uB2C8\uB97C \uACE0\uD654\uC9C8\uB85C \uC2A4\uD2B8\uB9AC\uBC0D\uD560 \uC218 \uC788\uB294 \uACF3\uC740 \uC774\uACF3 \uBFD0.",
        theme_color: "#d62929",
        icons: [
          {
            src: "icon-192x192.png",
            sizes: "192x192",
            type: "image/png"
          },
          {
            src: "icon-256x256.png",
            sizes: "256x256",
            type: "image/png"
          },
          {
            src: "icon-384x384.png",
            sizes: "384x384",
            type: "image/png"
          },
          {
            src: "icon-512x512.png",
            sizes: "512x512",
            type: "image/png",
            purpose: "any maskable"
          }
        ],
        shortcuts: [
          {
            name: "\uC694\uC77C\uBCC4 \uC2E0\uC791",
            url: "/daily",
            description: "\uC774\uBC88 \uBD84\uAE30 \uC560\uB2C8 \uD3B8\uC131\uD45C"
          },
          {
            name: "\uBCF4\uAD00\uD568",
            url: "/basket",
            description: "\uC2AC\uAE30\uB85C\uC6B4 \uC560\uB2C8\uC0DD\uD65C\uC744 \uC704\uD55C \uB098\uB9CC\uC758 \uACF5\uAC04"
          }
        ]
      }
    })
  ],
  resolve: {
    alias: {
      "@": fileURLToPath(new URL("./src", __vite_injected_original_import_meta_url))
    }
  },
  build: {
    rollupOptions: {
      output: {
        manualChunks: (id) => {
          if (id.includes("@firebase")) {
            return `vendor/@firebase/${id.split("@firebase/")[1].split("/")[0]}`;
          }
          const module = id.split("node_modules/").pop().split("/")[0];
          return `vendor/${module}`;
        }
      }
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS9sZWUvdnVlZmxpeFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvbGVlL3Z1ZWZsaXgvdml0ZS5jb25maWcuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvbGVlL3Z1ZWZsaXgvdml0ZS5jb25maWcuanNcIjtpbXBvcnQgeyBmaWxlVVJMVG9QYXRoLCBVUkwgfSBmcm9tIFwidXJsXCI7XG5cbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCI7XG5pbXBvcnQgVnVlRGV2VG9vbHMgZnJvbSBcInZpdGUtcGx1Z2luLXZ1ZS1kZXZ0b29sc1wiO1xuaW1wb3J0IHsgVml0ZVBXQSB9IGZyb20gXCJ2aXRlLXBsdWdpbi1wd2FcIjtcbmltcG9ydCB2dWUgZnJvbSBcIkB2aXRlanMvcGx1Z2luLXZ1ZVwiO1xuXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgcGx1Z2luczogW1xuICAgIHZ1ZSh7XG4gICAgICB0ZW1wbGF0ZToge1xuICAgICAgICBjb21waWxlck9wdGlvbnM6IHtcbiAgICAgICAgICBpc0N1c3RvbUVsZW1lbnQ6ICh0YWcpID0+IHRhZy5pbmNsdWRlcyhcInN3aXBlclwiKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgVnVlRGV2VG9vbHMoKSxcbiAgICBWaXRlUFdBKHtcbiAgICAgIGluY2x1ZGVBc3NldHM6IFtcImZhdmljb24uc3ZnXCIsIFwicm9ib3RzLnR4dFwiXSxcbiAgICAgIHJlZ2lzdGVyVHlwZTogXCJhdXRvVXBkYXRlXCIsXG4gICAgICBkZXZPcHRpb25zOiB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICB9LFxuICAgICAgbWFuaWZlc3Q6IHtcbiAgICAgICAgbmFtZTogXCJcdUIzNzBcdUI4MDhcIixcbiAgICAgICAgc2hvcnRfbmFtZTogXCJcdUIzNzBcdUI4MDhcIixcbiAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgXCJcdUIyRjlcdUIyRjlcdUQ1NThcdUFDOEMgXHVDNTYwXHVCMkM4IFx1QkNGQyBcdUI1NTAsIFx1QjM3MFx1QjgwOCEgXHVBQ0UwXHVDODA0IFx1QkE4NVx1Qzc5MVx1QkQ4MFx1RDEzMCBcdUM3NzRcdUJDODggXHVCRDg0XHVBRTMwIFx1RDY1NFx1QzgxQ1x1Qzc5MVx1QUU0Q1x1QzlDMCBcdUJBQThcdUI0RTAgXHVDNTYwXHVCMkM4XHVCOTdDIFx1QUNFMFx1RDY1NFx1QzlDOFx1Qjg1QyBcdUMyQTRcdUQyQjhcdUI5QUNcdUJDMERcdUQ1NjAgXHVDMjE4IFx1Qzc4OFx1QjI5NCBcdUFDRjNcdUM3NDAgXHVDNzc0XHVBQ0YzIFx1QkZEMC5cIixcbiAgICAgICAgdGhlbWVfY29sb3I6IFwiI2Q2MjkyOVwiLFxuICAgICAgICBpY29uczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNyYzogXCJpY29uLTE5MngxOTIucG5nXCIsXG4gICAgICAgICAgICBzaXplczogXCIxOTJ4MTkyXCIsXG4gICAgICAgICAgICB0eXBlOiBcImltYWdlL3BuZ1wiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3JjOiBcImljb24tMjU2eDI1Ni5wbmdcIixcbiAgICAgICAgICAgIHNpemVzOiBcIjI1NngyNTZcIixcbiAgICAgICAgICAgIHR5cGU6IFwiaW1hZ2UvcG5nXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzcmM6IFwiaWNvbi0zODR4Mzg0LnBuZ1wiLFxuICAgICAgICAgICAgc2l6ZXM6IFwiMzg0eDM4NFwiLFxuICAgICAgICAgICAgdHlwZTogXCJpbWFnZS9wbmdcIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNyYzogXCJpY29uLTUxMng1MTIucG5nXCIsXG4gICAgICAgICAgICBzaXplczogXCI1MTJ4NTEyXCIsXG4gICAgICAgICAgICB0eXBlOiBcImltYWdlL3BuZ1wiLFxuICAgICAgICAgICAgcHVycG9zZTogXCJhbnkgbWFza2FibGVcIixcbiAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBzaG9ydGN1dHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcIlx1QzY5NFx1Qzc3Q1x1QkNDNCBcdUMyRTBcdUM3OTFcIixcbiAgICAgICAgICAgIHVybDogXCIvZGFpbHlcIixcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlx1Qzc3NFx1QkM4OCBcdUJEODRcdUFFMzAgXHVDNTYwXHVCMkM4IFx1RDNCOFx1QzEzMVx1RDQ1Q1wiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJcdUJDRjRcdUFEMDBcdUQ1NjhcIixcbiAgICAgICAgICAgIHVybDogXCIvYmFza2V0XCIsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcdUMyQUNcdUFFMzBcdUI4NUNcdUM2QjQgXHVDNTYwXHVCMkM4XHVDMEREXHVENjVDXHVDNzQ0IFx1QzcwNFx1RDU1QyBcdUIwOThcdUI5Q0NcdUM3NTggXHVBQ0Y1XHVBQzA0XCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgfSksXG4gIF0sXG4gIHJlc29sdmU6IHtcbiAgICBhbGlhczoge1xuICAgICAgXCJAXCI6IGZpbGVVUkxUb1BhdGgobmV3IFVSTChcIi4vc3JjXCIsIGltcG9ydC5tZXRhLnVybCkpLFxuICAgIH0sXG4gIH0sXG4gIGJ1aWxkOiB7XG4gICAgcm9sbHVwT3B0aW9uczoge1xuICAgICAgb3V0cHV0OiB7XG4gICAgICAgIG1hbnVhbENodW5rczogKGlkKSA9PiB7XG4gICAgICAgICAgaWYgKGlkLmluY2x1ZGVzKFwiQGZpcmViYXNlXCIpKSB7XG4gICAgICAgICAgICByZXR1cm4gYHZlbmRvci9AZmlyZWJhc2UvJHtcbiAgICAgICAgICAgICAgaWQuc3BsaXQoXCJAZmlyZWJhc2UvXCIpWzFdLnNwbGl0KFwiL1wiKVswXVxuICAgICAgICAgICAgfWA7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IG1vZHVsZSA9IGlkLnNwbGl0KFwibm9kZV9tb2R1bGVzL1wiKS5wb3AoKS5zcGxpdChcIi9cIilbMF07XG4gICAgICAgICAgcmV0dXJuIGB2ZW5kb3IvJHttb2R1bGV9YDtcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0pO1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFxTyxTQUFTLGVBQWUsV0FBVztBQUV4USxTQUFTLG9CQUFvQjtBQUM3QixPQUFPLGlCQUFpQjtBQUN4QixTQUFTLGVBQWU7QUFDeEIsT0FBTyxTQUFTO0FBTDBILElBQU0sMkNBQTJDO0FBUTNMLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLFNBQVM7QUFBQSxJQUNQLElBQUk7QUFBQSxNQUNGLFVBQVU7QUFBQSxRQUNSLGlCQUFpQjtBQUFBLFVBQ2YsaUJBQWlCLENBQUMsUUFBUSxJQUFJLFNBQVMsUUFBUTtBQUFBLFFBQ2pEO0FBQUEsTUFDRjtBQUFBLElBQ0YsQ0FBQztBQUFBLElBQ0QsWUFBWTtBQUFBLElBQ1osUUFBUTtBQUFBLE1BQ04sZUFBZSxDQUFDLGVBQWUsWUFBWTtBQUFBLE1BQzNDLGNBQWM7QUFBQSxNQUNkLFlBQVk7QUFBQSxRQUNWLFNBQVM7QUFBQSxNQUNYO0FBQUEsTUFDQSxVQUFVO0FBQUEsUUFDUixNQUFNO0FBQUEsUUFDTixZQUFZO0FBQUEsUUFDWixhQUNFO0FBQUEsUUFDRixhQUFhO0FBQUEsUUFDYixPQUFPO0FBQUEsVUFDTDtBQUFBLFlBQ0UsS0FBSztBQUFBLFlBQ0wsT0FBTztBQUFBLFlBQ1AsTUFBTTtBQUFBLFVBQ1I7QUFBQSxVQUNBO0FBQUEsWUFDRSxLQUFLO0FBQUEsWUFDTCxPQUFPO0FBQUEsWUFDUCxNQUFNO0FBQUEsVUFDUjtBQUFBLFVBQ0E7QUFBQSxZQUNFLEtBQUs7QUFBQSxZQUNMLE9BQU87QUFBQSxZQUNQLE1BQU07QUFBQSxVQUNSO0FBQUEsVUFDQTtBQUFBLFlBQ0UsS0FBSztBQUFBLFlBQ0wsT0FBTztBQUFBLFlBQ1AsTUFBTTtBQUFBLFlBQ04sU0FBUztBQUFBLFVBQ1g7QUFBQSxRQUNGO0FBQUEsUUFDQSxXQUFXO0FBQUEsVUFDVDtBQUFBLFlBQ0UsTUFBTTtBQUFBLFlBQ04sS0FBSztBQUFBLFlBQ0wsYUFBYTtBQUFBLFVBQ2Y7QUFBQSxVQUNBO0FBQUEsWUFDRSxNQUFNO0FBQUEsWUFDTixLQUFLO0FBQUEsWUFDTCxhQUFhO0FBQUEsVUFDZjtBQUFBLFFBQ0Y7QUFBQSxNQUNGO0FBQUEsSUFDRixDQUFDO0FBQUEsRUFDSDtBQUFBLEVBQ0EsU0FBUztBQUFBLElBQ1AsT0FBTztBQUFBLE1BQ0wsS0FBSyxjQUFjLElBQUksSUFBSSxTQUFTLHdDQUFlLENBQUM7QUFBQSxJQUN0RDtBQUFBLEVBQ0Y7QUFBQSxFQUNBLE9BQU87QUFBQSxJQUNMLGVBQWU7QUFBQSxNQUNiLFFBQVE7QUFBQSxRQUNOLGNBQWMsQ0FBQyxPQUFPO0FBQ3BCLGNBQUksR0FBRyxTQUFTLFdBQVcsR0FBRztBQUM1QixtQkFBTyxvQkFDTCxHQUFHLE1BQU0sWUFBWSxFQUFFLENBQUMsRUFBRSxNQUFNLEdBQUcsRUFBRSxDQUFDLENBQ3hDO0FBQUEsVUFDRjtBQUNBLGdCQUFNLFNBQVMsR0FBRyxNQUFNLGVBQWUsRUFBRSxJQUFJLEVBQUUsTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUMzRCxpQkFBTyxVQUFVLE1BQU07QUFBQSxRQUN6QjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
